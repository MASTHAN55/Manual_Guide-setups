* Server Creation:
 1. create 3-servers.
     1-server (install jenkins).
     2-servers (install git & java 11 (or) 17) [amazon-linux-extras install java-openjdk11 -y (or) sudo yum install -y java-17-amazon-corretto, 
     yum install git java-1.8.0-openjdk maven -y] (install both servers).
       
 2. Slave Setup:
    1. manage jenkins --> nodes --> new node --> node name(masthan) --> parmenent agent --> create --> number of executors(3) 
       --> remote root directory: /tmp --> labels(slave-1) --> usage: lost-option --> launch method: last-option --> host(copy private-ip of slave)
       creadentials --> ssh username with private key --> Id(slave-1) --> username(ec2-user) --> enter directly(tick)
       --> copy pemfile of jenkins server --> save --> hostkey verification statagy(last option).

                                 [Build with free style]
 3. Build Restrict: (this option only we can see free-style project only, not-pipeline)
    Dashbord --> job --> configur --> restrict where this job run --> label(slave-1)--> save.

4. check output on slave server:
   cd /tmp/workspace/job name

Note:
 1. labels are very importent for build. Ex:slave1
 2. slave setup label and build restrict labels will be same for build.

                                 [Build with pipeline]
* Pipeline code: (it will not show this option "restrict where this job run" in pipeline).  

 pipeline {
    agent {
       label 'slave-1'
    }    
    stages {
        stage ('checkout') {
            steps {
                git ''
            }
        }
        stage ('build') {
            steps {
                sh 'mvn compile'
            }
        } 
        stage ('test') {
            steps {
                sh 'mvn test'
            }
        }
        stage ('artifact') {
            steps {
                sh 'mvn package'
            }
        }
        stage ('deploy') {
            steps {
                echo "my code is deploy"
            }
        }
            
    }
}
  
  
